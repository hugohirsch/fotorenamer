<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.aikiit</groupId>
  <artifactId>fotorenamer</artifactId>
  <packaging>jar</packaging>
  <version>0.1.3-SNAPSHOT</version>
  <name>FotoRenamer - rename your photos automatically</name>
  <description>Helper to rename your photos based on EXIF metadata extracted from the image itself.</description>
  <url>http://code.google.com/p/fotorenamer/</url>
  <organization>
    <name>Aiki IT</name>
    <url>http://www.aiki-it.de</url>
  </organization>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
    </license>
  </licenses>
  <issueManagement>
    <system>googlecode</system>
    <url>http://code.google.com/p/fotorenamer/issues/list</url>
  </issueManagement>
  <distributionManagement>
    <site>
      <id>fotorenamer-site</id>
      <url>scp://localhost/www/docs/project/fotorenamer</url>
    </site>
  </distributionManagement>
  <scm>
    <connection>scm:hg:http://fotorenamer.googlecode.com/hg/</connection>
    <developerConnection>scm:hg:https://fotorenamer.googlecode.com/hg/</developerConnection>
    <url>http://code.google.com/p/fotorenamer/source/browse/</url>
  </scm>
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <logger.version>1.2.16</logger.version>
    <junit.version>4.10</junit.version>
    <mockito.version>1.9.0-rc1</mockito.version>
    <maven.build.timestamp.format>yyyy-MM-dd HH:mm:ss</maven.build.timestamp.format>
  </properties>
  <dependencies>
    <!-- test dependencies -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${logger.version}</version>
    </dependency>
    <!-- normal dependencies -->
    <!-- library for EXIF metadata extraction -->
    <dependency>
      <groupId>org.apache.sanselan</groupId>
      <artifactId>sanselan</artifactId>
      <version>0.97-incubator</version>
    </dependency>
  </dependencies>
  <!--
      <repositories>
        <repository>
          <id>jboss.org</id>
          <name>jboss.org</name>
          <url>http://repository.jboss.com/maven2/</url>
        </repository>
      <repository>
        <id>maven-repository.dev.java.net</id>
        <name>Java Dev Net Repository</name>
        <url>http://download.java.net/maven/2/</url>
        <releases>
          <enabled>true</enabled>
          <updatePolicy>never</updatePolicy>
        </releases>
        <snapshots>
          <enabled>false</enabled>
        </snapshots>
      </repository>
      </repositories>
    -->
  <build>
    <extensions>
      <extension>
        <groupId>org.apache.maven.scm</groupId>
        <artifactId>maven-scm-provider-hg</artifactId>
        <!--version>1.5</version-->
      </extension>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-scm</artifactId>
        <!--version>2.0</version-->
      </extension>
    </extensions>
    <!-- filtering -->
    <!-- perform regular filtering without taking care of version stuff -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>filtered/*</exclude>
        </excludes>
      </resource>
    </resources>
    <!-- perform regular filtering without taking care dummy images -->
    <testResources>
      <testResource>
        <!-- this omits dummy images -->
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*.JPG</exclude>
        </excludes>
      </testResource>
      <!-- greps dummy images and performs no filtering -->
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>false</filtering>
      </testResource>
    </testResources>
    <pluginManagement/>
    <plugins>
      <!-- add test configuration to prevent tests from failing if no AWT can be opened -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <enableAssertions>true</enableAssertions>
          <!-- systemProperties>
                        <property>
                            <name>java.awt.headless</name>
                            <value>true</value>
                        </property>
                    </systemProperties-->
        </configuration>
      </plugin>
      <!-- copy Version.java independent of normal resource copying to avoid eclipse errors -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.5</version>
        <executions>
          <execution>
            <id>copy-version-information-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>
                                ${project.build.directory}/generated-sources/de/aikiit/bildbearbeiter/util
                            </outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/src/main/resources/filtered</directory>
                  <filtering>true</filtering>
                  <includes>
                    <include>Version.java</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- add generated sources as source dir in eclipse itself -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.7</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- hudson finds Version.java twice and fails with a duplicate class-error -->
      <plugin>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.4.1</version>
        <configuration>
          <filesets>
            <fileset>
              <directory>${basedir}/src/main/java/de/aikiit/bildbearbeiter/util/</directory>
              <includes>
                <include>Version.java</include>
              </includes>
            </fileset>
          </filesets>
        </configuration>
      </plugin>
      <!-- set compiler level to 1.6 -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <encoding>UTF-8</encoding>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>
      <!--  generate source and javadoc.jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.8</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>javadoc</goal>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- hg has a different date format than the standard, you need to set the date format here in order to generate reports -->
      <!-- followed after problems reported at http://stackoverflow.com/questions/2738572/maven-changelog-plugin-with-mercurial-problem -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-changelog-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <dateFormat>EEE MMM dd HH:mm:ss yyyy Z</dateFormat>
          <outputEncoding>UTF-8</outputEncoding>
        </configuration>
      </plugin>
      <!-- project reports are configured within the site plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
        <!-- mvn2: version>2.2</version-->
        <version>3.0</version>
        <configuration>
          <outputEncoding>UTF-8</outputEncoding>
          <inputEncoding>UTF-8</inputEncoding>
          <reportPlugins>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-checkstyle-plugin</artifactId>
              <version>2.7</version>
              <configuration>
                <!-- includeTestSourceDirectory>true</includeTestSourceDirectory -->
                <excludes>**/generated-sources/*.java</excludes>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-javadoc-plugin</artifactId>
              <version>2.8</version>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-jxr-plugin</artifactId>
              <version>2.3</version>
              <configuration>
                <aggregate>true</aggregate>
                <linkJavadoc>true</linkJavadoc>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>emma-maven-plugin</artifactId>
              <version>1.0-alpha-3</version>
            </plugin>
            <!-- check if this is necessary since reports are generated twice, once empty -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-surefire-report-plugin</artifactId>
              <version>2.10</version>
              <configuration>
                <!-- set to false with big projects -->
                <showSuccess>true</showSuccess>
              </configuration>
            </plugin>
            <plugin>
              <artifactId>maven-pmd-plugin</artifactId>
              <version>2.5</version>
              <configuration>
                <linkXRef>true</linkXRef>
                <sourceEncoding>UTF-8</sourceEncoding>
                <minimumTokens>100</minimumTokens>
                <targetJdk>1.6</targetJdk>
                <excludes>
                  <exclude>**/generated-sources/**/*.java</exclude>
                </excludes>
              </configuration>
            </plugin>
            <!-- read changes.xml -->
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-changes-plugin</artifactId>
              <reportSets>
                <reportSet>
                  <reports>
                    <report>changes-report</report>
                  </reports>
                </reportSet>
              </reportSets>
              <version>2.6</version>
            </plugin>
            <!-- jdepend plugin -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>jdepend-maven-plugin</artifactId>
              <version>2.0-beta-2</version>
            </plugin>
            <!-- 20090805  disabled due to a bug in Cobertura leading to CI error mails, http://jira.codehaus.org/browse/MCOBERTURA-73 -->
            <!-- cobertura plugin -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>cobertura-maven-plugin</artifactId>
              <version>2.5.1</version>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-changelog-plugin</artifactId>
              <version>2.2</version>
              <configuration>
                <dateFormat>EEE MMM dd HH:mm:ss yyyy Z</dateFormat>
                <outputEncoding>UTF-8</outputEncoding>
              </configuration>
            </plugin>
            <!-- catch code tags -->
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>taglist-maven-plugin</artifactId>
              <version>2.4</version>
              <configuration>
                <tags>
                  <tag>TODO</tag>
                  <tag>todo</tag>
                  <tag>FIXME</tag>
                  <tag>fixme</tag>
                  <tag>REFACTOR</tag>
                  <tag>refactor</tag>
                  <tag>REVIEW</tag>
                  <tag>review</tag>
                  <tag>@todo</tag>
                  <tag>@deprecated</tag>
                </tags>
              </configuration>
            </plugin>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>findbugs-maven-plugin</artifactId>
              <version>2.3.2</version>
              <!-- generates errors
                                  <configuration>
                                    <xmlOutput>true</xmlOutput>
                                    <xmlOutputDirectory>target/findbugs</xmlOutputDirectory>
                                    <outputDirectory>target/site/findbugs</outputDirectory>
                                    <threshold>Low</threshold>
                                    <effort>Default</effort>
                                                    <excludeFilterFile>findbugs-exclude.xml</excludeFilterFile>
                                                    <includeFilterFile>findbugs-include.xml</includeFilterFile>
                                    <visitors>FindDeadLocalStores,UnreadFields</visitors>
                                    <omitVisitors>FindDeadLocalStores,UnreadFields</omitVisitors>
                                    <onlyAnalyze>org.codehaus.mojo.findbugs.*</onlyAnalyze>
                                    <debug>true</debug>
                                    <relaxed>true</relaxed>
                                  </configuration>
              -->
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.4</version>
            </plugin>
          </reportPlugins>
        </configuration>
      </plugin>
      <!-- instrumentalization for cobertura -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.5.1</version>
        <!-- configuration>
                  <instrumentation>
                    <ignores>
                      <ignore>com.example.boringcode.*</ignore>
                    </ignores>
                    <excludes>
                      <exclude>com/example/dullcode/**/*.class</exclude>
                      <exclude>com/example/**/*Test.class</exclude>
                    </excludes>
                  </instrumentation>
                </configuration-->
        <executions>
          <execution>
            <goals>
              <goal>clean</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- Plugin for JNLP creation
                mvn package

                Manual JNLP creation:
                mvn webstart:jnlp-inline

                This way everything is packaged and bundled:
                mvn install webstart:jnlp
                mvn clean install webstart:jnlp

                BUG/REVIEW: http://code.google.com/p/fotorenamer/issues/detail?id=8
             -->
      <plugin>
        <groupId>org.codehaus.mojo.webstart</groupId>
        <artifactId>webstart-maven-plugin</artifactId>
        <version>1.0-beta-2</version>
        <executions>
          <execution>
            <goals>
              <goal>jnlp-inline</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <!-- you have to manually add all necessary dependencies that need to be included in the JNLP-ZIP,
                    this does not work with mvn3 if sources are generated: http://jira.codehaus.org/browse/MNG-4672 -->
          <dependencies>
            <includes>
              <include>log4j:log4j</include>
              <include>org.apache.sanselan:sanselan</include>
            </includes>
          </dependencies>
          <!-- add pictures for webstart here -->
          <resourcesDirectory>${project.basedir}/src/main/jnlp/resources</resourcesDirectory>
          <jnlp>
            <!-- path must be a relative one -->
            <inputTemplate>src/main/jnlp/jnlpTemplate.vm</inputTemplate>
            <outputFile>bildbearbeiter.jnlp</outputFile>
            <mainClass>de.aikiit.bildbearbeiter.ApplicationStarter</mainClass>
          </jnlp>
          <!-- SIGNING -->
          <!-- defining this will automatically sign the jar and its dependencies -->
          <!-- FIXME: http://cwe.mitre.org/data/definitions/798.html#Demonstrative%20Examples - this is fake data in here, change for yourself -->
          <sign>
            <keystore>${project.build.directory}/keystore</keystore>
            <keypass>m2m2m2</keypass>
            <storepass>m2m2m2</storepass>
            <!--sigfile>m2m2m2</sigfile-->
            <alias>alias</alias>
            <validity>360</validity>
            <dnameCn>www.aiki-it.de</dnameCn>
            <dnameOu>AIKI IT</dnameOu>
            <dnameO>bildbearbeiter</dnameO>
            <dnameL>Berlin</dnameL>
            <dnameSt>Berlin</dnameSt>
            <dnameC>DE</dnameC>
            <verify>true</verify>
            <keystoreConfig>
              <delete>true</delete>
              <gen>true</gen>
            </keystoreConfig>
          </sign>
          <!-- was true -->
          <verbose>false</verbose>
        </configuration>
      </plugin>
      <!-- 2011-03-26 generates build number for filtering, seems to fail with hg as SCM provider, see http://jira.codehaus.org/browse/MOJO-1436 -->
      <!-- 2011-08-23 http://stackoverflow.com/questions/802677/adding-the-current-date-with-maven2-filtering done with groovy -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>create</goal>
            </goals>
          </execution>
        </executions>
        <configuration/>
      </plugin>
    </plugins>
  </build>
  <!-- Run mvn clean install -Plive-demo for a live demo of this tool -->
  <profiles>
    <profile>
      <id>live-demo</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1</version>
            <executions>
              <execution>
                <phase>test</phase>
                <goals>
                  <goal>java</goal>
                </goals>
                <configuration>
                  <mainClass>de.aikiit.bildbearbeiter.ApplicationStarter</mainClass>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <!-- see http://jira.codehaus.org/browse/MNG-4672 - if sources are generated by default dependencies are not added to the JNLP -->
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>2.1.2</version>
            <executions>
              <execution>
                <phase>package</phase>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
  <developers>
    <developer>
      <name>Hugo Hirsch</name>
      <id>hirsch</id>
    </developer>
  </developers>
</project>
